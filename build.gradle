apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

version = '1.1.1-SNAPSHOT'
group = 'com.tuplejump'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

dependencies {

    compile('com.clearspring.analytics:stream:2.7.0')

    compile('org.mvel:mvel2:2.2.2.Final')

    //lucene dependencies
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '4.8.1'
    compile group: 'org.apache.lucene', name: 'lucene-spatial', version: '4.8.1'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '4.8.1'
    compile('org.apache.lucene:lucene-queryparser:4.8.1') {
        exclude group: 'org.apache.lucene', module: 'lucene-sandbox'
    }
    compile('org.apache.lucene:lucene-join:4.8.1')
    compile('joda-time:joda-time:2.3')
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'

    //provided dependencies - do not copy into dist
    compile('org.codehaus.jackson:jackson-mapper-asl:1.9.2')
    compile('org.codehaus.jackson:jackson-core-asl:1.9.2')

    compile('org.apache.commons:commons-lang3:3.1')
    compile('org.slf4j:slf4j-api:1.7.2')
    compile('org.slf4j:slf4j-log4j12:1.7.2')

    compile('org.apache.cassandra:cassandra-all:2.1.11') {
        exclude group: 'asm'
        exclude group: 'org.apache.mina'
    }

    compile('org.javolution:javolution:5.3.1')

    //testing dependencies
    testCompile group: 'junit', name: 'junit', version: '4.11'

    testCompile('com.datastax.cassandra:cassandra-driver-core:2.1.8') {
        exclude group: 'org.apache.cassandra', module: 'cassandra-all'
        exclude group: 'log4j'
        exclude group: 'io.netty'
        exclude group: 'com.google.guava'
    }

    testCompile('org.cassandraunit:cassandra-unit:2.1.9.2') {
        exclude group: 'org.apache.cassandra', module: 'cassandra-all'
        exclude group: 'log4j'
        exclude group: 'org.sl4j'
        exclude group: 'org.jboss.netty'
    }

    testCompile group: 'net.sourceforge.argo', name: 'argo', version: '3.7'

}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task copyLibs(type: Copy) {
    from configurations.compile
    into 'build/dist/stargate/libs'
    include 'lucene-*.jar'
    include 'joda-*.jar'
    include 'commons-collections-*.jar'
    include 'annotations-*.jar'
    include 'compiler-*.jar'
    include 'mvel2-*.jar'
    include 'stream-*.jar'
    include 'javolution-*.jar'
}

task copySamples(type: Copy) {
    from 'src/test/resources/samples'
    into 'build/dist/stargate/samples'
}

task copyJar(type: Copy) {
    dependsOn jar
    from 'build/libs'
    into 'build/dist/stargate/libs'
}

jar { dependsOn([copyLibs, copySamples]) }

task dist(type: Tar) {
    baseName 'stargate-core'
    extension 'tar.gz'
    compression 'GZIP'
    dependsOn copyJar
    from('build/dist')
}

task copyJarToCCM(dependsOn: copyJar) << {
    if (project.hasProperty('cassandraVersion')) {
        copy {
            from 'build/dist/stargate/libs'
            into System.getProperty('user.home') + '/.ccm/repository/' + project.property('cassandraVersion') + '/lib'
        }
    } else {
        throw new RuntimeException("Please set cassandraVersion before running this")
    }
}

install {
    repositories.mavenInstaller {
        pom.version = version
        pom.groupId = group
        pom.artifactId = 'stargate-core'
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}


uploadArchives {
    repositories {
        mavenDeployer {
            pom.artifactId = 'stargate-core'

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'stargate core'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Lucene based secondary indices for Cassandra'
                url 'http://tuplejump.github.io/stargate/'

                scm {
                    connection 'scm:git:git@github.com:tuplejump/stargate-core.git'
                    developerConnection 'scm:git:git@github.com:tuplejump/stargate-core.git'
                    url 'https://github.com/tuplejump/stargate-core'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'trulite'
                        name 'trulite'
                        email 'satya@tuplejump.com'
                    }
                }
            }
        }
    }
}
